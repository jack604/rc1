

W3.03 includes:
How to generate a controller
Actions
Embedded Ruby (ERB)

Controllers (basically classes) contain actions (Ruby methods) and orchestrates web requests. ?orchestrates?

? 0:40
"generate" controller and actions ?with their associated views?

how to generate:
cmd: rails generate (or g) controller controller_name [action1 action2] (aciton optional)

controllers in app/controllers/<filename>.rb
view files in app/view/greeter/<filename>.erb ?erb? erb är typ som static page

ERB (Embedded ruby)
templating library (similar to JSP), that lets you embed Ruby into your HTML.
two tag patterns to learn:
<% ... ruby code ... %> - evaluate Ruby code obs evaluates the code inside typ.
<%= ... ruby code ... %> - output evaluated Ruby code. evalueras någonting där?

t.ex:
hello.html.erb (in app/view-directory)
<% random_names = ["Alex", "a", "b",] %>
<h1>Greetings, <%= random_names.sample %></h1>
<p>The time now is <%= Time.now %> </p>

greeter_controller.rb (controller part app/controller)
class GreeterController < ApplicationController
 def hello
 end
end


To create a new action:
create goodbye.html.erb in views/greeter (go to url/greeter/<action>) Observera katalogstrukturen lokalt och i urlen.

define new method goodbye in GreeterController class.
obs kom ihåg att generate se ovan. ca 1:10
Hmm... still missing a component... more later. (see nästa lektion Routes.)

Routing:
before controller can orchestrate where the web request goes the web request needs to get routed to the Controller. (? motsvarighet i java web programming?)

hello action worked because routes generated during cmd: rails generate controller

MVC(R) cycle (0:58 routers video):
1 request sent
2 router routes request to controller
3 controller <--> model
4 controller invokes view
5 view renders data

routes.db
all the routes needs to be specified (either generated by rails generators or manually)
manual config in config/routes.db

?lite vagt förklarat hittills:
get 'greeter/hello' interpret as greeter controller and control action.

also syntax:
get 'greeter/hello' => "greeter#action"
antar att första är typ url och andra är class och metod. om dessa identiska behöver man inte syntaxen med =>


Rake: (equivalent to make c, ant/maven (written in or uses? XML) java)
ruby's build language
R(uby's m)ake
No XML - written entierly in Ruby.

Rails uses rake to automate app-related tasks
- database, running tests, etc

rake --tasks, lists all supported tasks.
rake --describe <taskname>, info om rask.
rake --describe routes (kör i app-katalogen.)

rake routes, lists routes (kör i app-katalogen)

Prefix, går igenom det senare.