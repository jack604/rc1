opening connection to api.coursera.org:443...
opened
starting SSL for api.coursera.org:443...
SSL established
<- "GET /api/catalog.v1/courses?fields=smallIcon%2CshortDescription&q=search&query=python HTTP/1.1\r\nAccept-Encoding: gzip;q=1.0,deflate;q=0.6,identity;q=0.3\r\nAccept: */*\r\nUser-Agent: Ruby\r\nConnection: close\r\nHost: api.coursera.org\r\n\r\n"
-> "HTTP/1.1 200 OK\r\n"
-> "Cache-Control: private, no-cache, no-store, must-revalidate, max-age=0\r\n"
-> "Content-Encoding: gzip\r\n"
-> "Content-Type: application/json; charset=utf-8\r\n"
-> "Date: Sat, 03 Oct 2015 15:44:47 GMT\r\n"
-> "Set-Cookie: CSRF3-Token=1444751087.kHqsL2L5RDUPShGv; Expires=Tue, 13 Oct 2015 15:44:47 UTC; Path=/; Domain=.coursera.org\r\n"
-> "Set-Cookie: __204u=9334235857-1443887087287; Expires=Sun, 02 Oct 2016 15:44:47 UTC; Path=/; Domain=.coursera.org\r\n"
-> "Strict-Transport-Security: max-age=31536000\r\n"
-> "Vary: Accept-Encoding\r\n"
-> "X-Coursera-Request-Id: rNbl0GnlEeWa_A41vPqiWw\r\n"
-> "X-Frame-Options: SAMEORIGIN\r\n"
-> "transfer-encoding: chunked\r\n"
-> "Connection: Close\r\n"
-> "\r\n"
-> "866\r\n"
reading 2150 bytes...
-> "\x1F\x8B\b\x00\x00\x00\x00\x00\x00\x00\xEDX\xCB\x8E\xE3\xB8\x15\xFD\x15\xC6\xAB\x04pY\x0F[\xAF\xDEU\xA7\x06I\a\x93N\x05\xD5A\x10\xA4\x83\x02\x1FW6\xBB$R\x11\xA9r\xBB\e\x03\xE47\xB2\f\xF2\x17\xD9\xF6\x9F\xE4KrII\x96\xEDvUe<\xB3\xC8\x00Y\xD4C\x12\xC5K\x9Es\xEE\xBD\x87\xFA<\x83\njP\xD6\xCC^\xFD\xF9\xF3L\x8A\xD9\xABh\xB5\x8C\xE73\xB3\xD1\xAD}Kk\x98\xBD\x9A\xD1NH=\x9B\xCFT\x7Fy\xED.\xC9\x9D\\+Z\x91\xDBVs0F\xAA5)uK~\xDB\x19\xC9\xC9u\xD3T\x92S+\xB52\xB3a\xAE\e0\xBC\x95\x8D\xBB\x87s\xBCQ\xC4n\xA4!\\w\xAD\x01\xB2\xD3\x1D\xD9\xCA\xAA\"\x15\xD0V\x11\xCAtg\x89\x0FKL\x1F\xA7\x99\xE2\xD4`7Z\xE8J\xAF%\x18\x9C\x86\xE2\xD0\x16\x88i\x80\xCB\x12\xA3\xBBu\xD4~\x1DT\t\xA2K\xD2a\x04\xA9H\v8\x0F=X\xDA\x82\xFC\xE98\xAE\xD5\xF8\n\xADv\x06\xE6\xC4\xEC\x94\xDD\x80\x91\x9F\xC0Oc[\xAA\f\xCE\\\x13\xA3;%\fN\xEA\xD6\x82C\xC8\xED\x0E\xD7\xA3\xDC\n\xD7-\xADkw\xBB\xA2j\xDD\xD15,\xDC\xEEkZUo\xB8\xDF\xF6\xC6\xDA\xC6\xBC\n\x02\x11%|\x9B&\xB2\xE1\xD6\xB4\xED\x82W\xBA\x13e\xAB\x95](\xB0\xC1*\vR\x91\x8B4\x8C\x00h\x14\xC1\xAA`,)3&`EK\x011\x04\xA5\\w-,\x1A\xB5\xC6\x00\x95T\x0FH\xDF\xE7\xEF\xBE\x9B\xF7\f\xC6Er\xC2\xE0\x1A\x94\xB1\xD4\x9A\x89\xC4;\xBC\x94\xC6Jn<^\xBF\x02\xA5kD\xEC\x86ZJ\xEE\xB8\x04\xC5\xE1<s\xD7\n\xB1\xB4\xAD\x16\x1Dww\x1Cf\x0E\x043\xCD\xC7`#\x1Dbx\xB7\xD6\xC6\x92F7]E[\xB2\x1Eb\b\x17\xC3\xF41\x1Cj\x1F\x00QX\x90wN\x0F\xD2\xF4\xB3\xC9\x8Fv3\x8AC*\x7Fo\\\xE2k\xB9>Z&\xB9s\xC4\xD3J~\xF2\xAC\x12\xC4\xB1&\xBF\xD1\ee\xC8\xAFu\xF3 \xF1\xEF\x1F\x94|\x84\xD6H\xBB\xBB\x8C\x10Z\"!\x05\x94\xA1X\x86\xC2\x13\x92G%\xCBVQ\\2(\xA32\n\xA6\xED_\x85\xD1\xE2Cs\x9E\x97t\x95}\xC5K\xE3\xD53\x113\xA8\xE9\xFB\x91\xE2\xB1\xE3\x155\xC6\x01\xFA(\x05&\x06=O\xD43j\xED\x85\x8Ec\xE40Hi\vL\xEB\x87cr0q[\xF1\xBFC\x8E(\x03\x9A\x96a\xEC\xC8\x01O\x0E\x8DxY\xAC\xF2\xACL\xC4\nX\x19\xF4\x10?GL\x96\x9C\x10\x83\xC8AK\x11\xB8G\xE8\xDF\x8E\x0F\xEA\x9F\"oN\x80}3\rw\x15q\x8F,\xA23@\xF9\xF3[\xDAZ\x12\xFF\xE2\x19\xFE\xECV_5n\xD4\b\xAD!\xC8#\x96?\x10.\x06C~H\xD9\x9Dg\x95Q\xE3R\x0F\x8B]s.\xFC\x82\xFC\xAE\xC3\xA2H\xA5\x13\x16\xEFL_\xF4pF\x9C\x81u\xB2\x12n\xB4\x91uS9F\xA7\xBD\xACq\xC7\x86\x98\x8Eo\b5\xE4V\xAB\xF5\x9C\xBC\xAE(\x7F\xF8\x80?^.\xD7\x06Gk)\xCC\x85\xA5\xAE\f\xD82I\xC3\xB0\x10\"\xEB3kYFX\xE3\x8A\"\xCB3\x9A\x87\x81\x94Ms/q\xCE'\xAB]\x96\x14\xC7\xE45\xADT\\\xE2^\f\xD7u\xD3Y\xDC\xDC\x01}\xB7\xFB\xA7\x0E\xAE_\x8E#.bh`\x02\xCCD\x02\xA2\x8C\xFF\xE3/\xEC2\x95\x87\xE8\x90\x91ii}\xE3\xC2V\x02m%\xB1R:\x8C\xF7\xEB\x81vL\xA0\x05!w\xB6\x13\xAEC\xF7\xA4\xB5PJ\xE5\x92\x10d{4\xB5y\xC0\xC7\xC6\xF1\xB4\x05\x1C\x87\x7F\x87\xA6v$\x0F\x8E]\xD0o\x17J\xEC\x95\x18\xC2bC\xAB:\xDF\x0F\x9D\x98\x10\xB1\x1AE\xD1\x03\xE7s\xB6o\xBE\fm\xC2\x85\x1C\xE7\"\xE0Q\x11M\x1C\xD3\xAC\x88\xA3b\x19\xD2\x15\xCFD\x92b\x82\xEEQ\xB9\xD7\xE5\xFD\x9E\xB4{\xDC)\xAD\x9EN\xDA4:\xF1)\xD5Z\xB7\xD2n\xB0\x10a\x8DR\x0F\x879;=r\xB5L=\xBC\xCC\xF87\x1F\eh=\a\xE2\x84\x15W\xE9M\xEF\x14\x06w\x80\x10b\xB6\x9C\a\x8D8\x7F\x82\\<B\xE5\b\xA0\xCCX\x9F^.y\x9D\x04\xA4\xEB\x98;\xEDK/^\xBA!jG\x9C\xCC$\xF7}\xF3\xAC\xB1 \xE4D\x91\xBE\xF8\x9F\x94\f\f\x84\x19oF\xFD\f\xB5\xFAH\xA0H$\x87\xC6oG\x8C&\xCB\xAD\xE1\xFDY\xC8\xDE\xCF\xE6\x04\xE9\xD7\xDB\xC1\xFB\xD4\xBE0\xB9\x022T\x8Fv\x8E=\x1F\xCD\xD8\xD3\xEA:'\xAB\xF7\xEA\"ae\x10\x88\xB4\x8C2'\xAC\xDC\t\x8B\xB1p%\xCA$,V,\x89h\x04\x01\xEE\xE1\xDD\xE6\x1E\x9D\xA2~REy\x1C\x9E\xA8H\x98\xE8\x8Cpz\x9Ft\xF3\xF6\x9A\xDC\xC1_;\x94\x85\xF4\xE5\xE8\x8Cp\xFE\b\x87\x9E\xF2x\xCB\xBDw5\xE4\xEA\x8A\xD0if\x87}\xEF\x8Al\x8Bu\x1D\xAD\x9D\x1F\xE1\x02\xF6*sp\xBB\xD0f\x1F\xDA\x8F_\x90\xE3X(3i-\xD6\xF0\xDE@\xE3\e\xF3\xD1u\x99\xB9\x8F\xB2\xD1\xDB\xD3\x89\xA4\xF3\xB2 PQ\xE3d\xCE/\x0Fm\v9\xF3\xBC\xBA#\x02y\x80\xDDK\xAB\xF6\x0EB\xEFs\xC3[n\xBF\x82\xE1\xD9\x99M\x18\xB0\x17+ \x14A\x1E\xE7)\r\xC3$\x8DQ\x01\t\x96\x96\x94\x15\xCBB@Y\xD00\xCF\x82q\xFB\xF7\xD3\xC2\x9Fq\x01\xF9\x8B\x8D$\xFAo\eI\xF4\xFFF\xF2c7\x92,\f`\x19\x95\xB0o$\xACH\x98H\x90\xFC\x04\x8A4\x8E\xC3\xCB\x1AI\xB4\x8A\x97\xC7\xBC+\xE8ZZ9qNlc;\xA8P@\xB8\xE1\xB7\xFE\xA9\xB7\xB9OP\xDC\xEE\xDC\x89\xB6%\e\xC7\xDAH\x0E\x1E\x11\x94\x18\xCF\x8C\xCCWf\xB6\xEB\xA1\xF5w\xA7\xAC\xE9\xC3\xF7\xB9\xB5\xF3\x02\xA9\xCA\x9Faz\xEA\xD6\xB7\xAD-\xAA\xB8\xCF\xAC\xC3\x81.\x8Dz{\xED\xEE\xEA\xF1|\x85I\x89\x11P\x12\x156\x9E\xB9\x9B\xEE\xDF\x7F\xFB\xFB\xBE`\xF87\xFB#\xAFS%\xF0\x8D\x92\x98\x9Ch\xF9\xB4?\x93s<D\b\x89\xEAG\x87\xEE\xCB\xD1\xB8\x1C_H\xA6\x8Dlqi\x17\x92\x1A\x85\x01[\xC5%\x1E\xACb<HE\xB0\xA4Q\x99\xF1\xAC\b\xB3\f\rB\xCAx\xB0G\xFE\xBEG\xFE\xDE!\xDF\x17\xF5',a\x14\x9F8\x03a\x9A\x89\xC9\e\xB9\x96\x16a\xFB\xEA\v\xC6y6\xBF\xDD\x8B\x1F\xCD\xB7\xA0\xAE\x12\xD2\xCA\xA7\x80\x18&\xFA\xFA\x13\x05\x8E\xD6(\x02_!G\xF8|\xEB\xDD\xB5\x92\n\xB2\xA5;Cn\xEEn1\xC5\x1F\x10l\xB4\x06\xEDNP\x14\x83,\xA1\xEF\x9F\xCD\xE0\xF0\x1F{\x7F\x81\x91\x9FF\xF7S\x9E\x84\xE2\xD3\xE6\xA3\xC9\x04\x9C\xA2ku\x83\xF9\x1A\xE0\xFE\x03\xFF\xF2\x95w\xD2\e\xB7\xA0g\xFCt\xF2\xC2a(\xFAQ\x0EC\xDF\xAFB\xFE\xB4\x0EC\xE4\xA2\\\x88yPdi\xE1\x9Dr\xEA\x9D20\x911\xB6bi\xC8\xD2\"O^>\r-\x93\xE8\xA4\x981\xB9vi\x8E\x89jd5\x11\xB7?\xA9\xA3\x89\xBB\xA3_\xFE%\xB0\xEEh\xF2z\x1Cu\xEE\xCBO\xD3\x02&\x00\x02\x8FE\xD5\x9D\xE8[\x87\x83\xD2\x8F\xF8\e}\xCD\xF0I\x8E:\xA2\b\x06\xED\x8B\vr\xE8\xDE\xA0\xEA\xCB?*\x89<\xE23dD\xB9\x0F\x14\x8C*\xAE\xFDhA\x05\xFE\x03\xE3\xE0\x1A*\x8C.)qw\x87\xAC\xEA\aZ]S\\\x81{\x05\xB84_\xFE\xA9/+:\b\xF4*ME\x1E\xAEx\xE4:I\x92'\xABe^\x84\t\x85\xE5\x92\x97\x9C\x06wP_\xD9{\xDBUO\x17\x99e\xB2:\xB1\v^^\xBE\xB2\x1E\xBA\x84I\x82\xAE\x82~\xE3\x92\x9Di\xB1\xC3,\xF0\xE3\x9F\xCB\x82A\xFCT\xD6\xBE\xA7Z\xA0(>_.\xB4k\xDD\xFAlg>\x14=\x1F\\\xC0\xF8\xBDr\xCC\x80w\e\x18'\xDFx\x12\xF1-\xB8j\xD1\x99I#\xED`\xD6\xE8\xA3\xD3\xB23\xFC\x98\x17v\xF80\xE7\xD2\xC2\xD8\x03s\x82b\xBFV~=\xBE1\xD5\x1A{\x1D\xB5\xB0\x0FM`\x7F\x90\"\xB8\xCF\x0E\xCF\n.{\xD1\a\xB8\r\xD4\xD4\xE5\xCCx.\xC1q\xAE\xB6\xCA\xA3\xAF\xC3\x17~\x16J\x02\x06\x9C\x16\xE1*\xCB\x96\xDE\x1Ar`a\xC2\x801\x86\xA6?M\x87\xCFBO\xD2\ef\xA7\xAE\xA0j|\xB5\x99\xB8=\xAD|o\xA9\xF5\r\xF9\xDB\xF1\x83\xDAK\xBD\xE5\x90\xE4\x97>\xDC\x95\x12*\xFF9\xFB\x99(s|\x93W]o3|\xE9\xC7\x9E\xF2\x80#h\xDB?FYSe\xFDq\xE0\xF7\xD8\xE7\xFD\xFC\xD7\xCAl\xA1\xF5\x8F\x1D\xEBw\xEE\x80\xEB\xFD\xFE\xF5`\f.u\xE7,\t\x10x\x9EL\x14\x88\x18\xE8\x92\xE7I\x1C\xB2x\x99F\x01B\xFA\x14\xFEy\xFEB\x13\xFAa=\xE8e>~b\x1D\xE7\x87\xD8\x83\xAF\xB0}\xD9,\xFC\xA5\xBF\x00\xE1\xAF\xFE\x03\x96\xBFtkG\x1A\x00\x00"
read 2150 bytes
reading 2 bytes...
-> "\r\n"
read 2 bytes
-> "0\r\n"
-> "\r\n"
Conn close
New line p and pp



Hash
{"id"=>1432,
 "shortName"=>"audio",
 "name"=>"Audio Signal Processing for Music Applications",
 "shortDescription"=>
  "In this course you will learn about audio signal processing methodologies that are specific for music and of use in real applications. You will learn to analyse, synthesize and transform sounds using the Python programming language.",
 "smallIcon"=>
  "https://d15cw65ipctsrr.cloudfront.net/47/6d8d601eea11e49bb5f7bde4afde2e/figure.png",
 "links"=>{}}

1432


"Audio Signal Processing for Music Applications"
"Statistics for Genomic Data Science"
"Python for Genomic Data Science"
"An Introduction to Interactive Programming in Python (Part 2)"
"Principles of Computing (Part 2)"
"Algorithmic Thinking (Part 2)"
"Algorithms for DNA Sequencing"
"Principles of Computing (Part 1)"
"Exploring Neural Data"
"Digital Signal Processing"
"An Introduction to Interactive Programming in Python (Part 1)"
"Big Data em Sa\u00FAde no Brasil"
"Programming for Everybody (Python)"
"Introduction to Natural Language Processing"
"An Introduction to Interactive Programming in Python"

"Audio Signal Processing for Music Applications"
"In this course you will learn about audio signal processing methodologies that are specific for music and of use in real applications. You will learn to analyse, synthesize and transform sounds using the Python programming language."

"Statistics for Genomic Data Science"
"An introduction to the statistics behind the most popular genomic data science projects. This is the sixth course in the Genomic Big Data Science Specialization from Johns Hopkins University."

"Python for Genomic Data Science"
"This class provides an introduction to the Python programming language and the iPython notebook. This is the third course in the Genomic Big Data Science Specialization from Johns Hopkins University."

"An Introduction to Interactive Programming in Python (Part 2)"
"This two-part course is designed to be a fun introduction to the basics of programming in Python. Our main focus will be on building simple interactive games such as Pong, Blackjack and Asteroids."

"Principles of Computing (Part 2)"
"This two-part course introduces the basic mathematical and programming principles that underlie much of Computer Science.  Students will refine their programming skills as well as learn the basics of creating efficient solutions to common computational problems."

"Algorithmic Thinking (Part 2)"
"Experienced Computer Scientists analyze and solve computational problems at a level of abstraction that is beyond that of any particular programming language.  This two-part class is designed to train students in the mathematical concepts and process of \"Algorithmic Thinking\", allowing them to build simpler, more efficient solutions to computational problems.\n"

"Algorithms for DNA Sequencing"
"We will learn computational methods -- algorithms and data structures -- for analyzing DNA sequencing data. We will learn a little about DNA, genomics, and how DNA sequencing is used.  We will use Python to implement key algorithms and data structures and to analyze real genomes and DNA sequencing datasets.\n"

"Principles of Computing (Part 1)"
"This two-part course introduces the basic mathematical and programming principles that underlie much of Computer Science.  Students will refine their programming skills as well as learn the basics of creating efficient solutions to common computational problems."

"Exploring Neural Data"
"Try your hand at understanding the brain by learning to analyze neural data yourself!  Working with real neural data sets from neuroscience research labs, you\u2019ll learn data analysis techniques so you can discover for yourself how the brain works."

"Digital Signal Processing"
"Learn the fundamentals of digital signal processing theory and discover the myriad ways DSP makes everyday life more productive and fun."

"An Introduction to Interactive Programming in Python (Part 1)"
"This two-part course is designed to be a fun introduction to the basics of programming in Python. Our main focus will be on building simple interactive games such as Pong, Blackjack and Asteroids. "

"Big Data em Sa\u00FAde no Brasil"
"Aprenda a utilizar as novas metodologias de big data para a an\u00E1lise de grandes bancos de dados e para a melhoria dos processos de tomada de decis\u00E3o."

"Programming for Everybody (Python)"
"This course aims to teach everyone to learn the basics of programming computers using Python. The course has no pre-requisites and avoids all but the simplest mathematics. Anyone with moderate computer experience should be able to master the materials in this course."

"Introduction to Natural Language Processing"
"This course provides an introduction to the field of Natural Language Processing, including topics like Parsing, Semantics, Question Answering, and Sentiment Analysis.\n"

"An Introduction to Interactive Programming in Python"
"This course is designed to be a fun introduction to the basics of programming in Python. Our main focus will be on building simple interactive games such as Pong, Blackjack and Asteroids."

